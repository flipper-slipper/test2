//this is pseudocode for a function that will drive the robot forward a certain amount

void goForward(int targetDistance, int speed) //distance in OSE (optical shaft encoder) clicks
{
	/*
		---General Idea of Code---
			The left motor will be treated as the master and the right will be the slave.
			Left motor speed will be set by the user. The right motor 

		---Some example scenarios---
			The robot is veering to the right side when going forward. Theerfor, the amount of OSE clicks for the left side will be more than the right side.
			Let's say that the left side has 10 encoder clicks and the right side has 6.
			The error will be 10 - 6 = 4.
			Now, because the right motor is a slave, the speed will eqaul the leftSpeed + 4 * Kp.
		
			
		--VAR names and what they mean--
			kP: a constant that wil be used to adjust the error so that it can be used to change motor speed				
			error: the difference between the left and righ wheel shaft encoder clicks (encoder clicks measure distance)
			distanceTravelled: the distance travelled so far (as of the function being called)
	*/
	int kP = ? //kP is a constant to be determined 
	int error = leftClicks - RightClicks
	int distanceTravelled = 0 //distance in clicks

	while (distanceTraveled < targetDistance)
	{
		error = leftClicks - RightClicks
		leftMotorSpeed = speed
		rightMotorSpeed = leftMotorSpeed + kP * error
		delay(20 ms)
	}
|
